"use strict";describe("angular",function(){var e;afterEach(function(){dealoc(e)}),describe("case",function(){it("should change case",function(){expect(lowercase("ABC90")).toEqual("abc90"),expect(manualLowercase("ABC90")).toEqual("abc90"),expect(uppercase("abc90")).toEqual("ABC90"),expect(manualUppercase("abc90")).toEqual("ABC90")})}),describe("copy",function(){it("should return same object",function(){var e={},t=[];expect(copy({},e)).toBe(e),expect(copy([],t)).toBe(t)}),it("should preserve prototype chaining",function(){var e={},t=Object.create(e),o=Object.create(t);expect(t.isPrototypeOf(copy(o))).toBe(!0),expect(e.isPrototypeOf(copy(o))).toBe(!0);var n=function(){};expect(copy(new n)instanceof n).toBe(!0)}),it("should copy Date",function(){var e=new Date(123);expect(copy(e)instanceof Date).toBeTruthy(),expect(copy(e).getTime()).toEqual(123),expect(copy(e)===e).toBeFalsy()}),it("should copy RegExp",function(){var e=new RegExp(".*");expect(copy(e)instanceof RegExp).toBeTruthy(),expect(copy(e).source).toBe(".*"),expect(copy(e)===e).toBe(!1)}),it("should copy literal RegExp",function(){var e=/.*/;expect(copy(e)instanceof RegExp).toBeTruthy(),expect(copy(e).source).toEqual(".*"),expect(copy(e)===e).toBeFalsy()}),it("should copy RegExp with flags",function(){var e=new RegExp(".*","gim");expect(copy(e).global).toBe(!0),expect(copy(e).ignoreCase).toBe(!0),expect(copy(e).multiline).toBe(!0)}),it("should copy RegExp with lastIndex",function(){var e=/a+b+/g,t="ab aabb";expect(e.exec(t)[0]).toEqual("ab"),expect(copy(e).exec(t)[0]).toEqual("aabb")}),it("should deeply copy literal RegExp",function(){var e={re:/.*/};expect(copy(e).re instanceof RegExp).toBeTruthy(),expect(copy(e).re.source).toEqual(".*"),expect(copy(e.re)===e.re).toBeFalsy()}),it("should copy a Uint8Array with no destination",function(){if("undefined"!=typeof Uint8Array){var e=new Uint8Array(2);e[1]=1;var t=copy(e);expect(copy(e)instanceof Uint8Array).toBeTruthy(),expect(t).toEqual(e),expect(t).not.toBe(e)}}),it("should copy a Uint8ClampedArray with no destination",function(){if("undefined"!=typeof Uint8ClampedArray){var e=new Uint8ClampedArray(2);e[1]=1;var t=copy(e);expect(copy(e)instanceof Uint8ClampedArray).toBeTruthy(),expect(t).toEqual(e),expect(t).not.toBe(e)}}),it("should copy a Uint16Array with no destination",function(){if("undefined"!=typeof Uint16Array){var e=new Uint16Array(2);e[1]=1;var t=copy(e);expect(copy(e)instanceof Uint16Array).toBeTruthy(),expect(t).toEqual(e),expect(t).not.toBe(e)}}),it("should copy a Uint32Array with no destination",function(){if("undefined"!=typeof Uint32Array){var e=new Uint32Array(2);e[1]=1;var t=copy(e);expect(copy(e)instanceof Uint32Array).toBeTruthy(),expect(t).toEqual(e),expect(t).not.toBe(e)}}),it("should copy a Int8Array with no destination",function(){if("undefined"!=typeof Int8Array){var e=new Int8Array(2);e[1]=1;var t=copy(e);expect(copy(e)instanceof Int8Array).toBeTruthy(),expect(t).toEqual(e),expect(t).not.toBe(e)}}),it("should copy a Int16Array with no destination",function(){if("undefined"!=typeof Int16Array){var e=new Int16Array(2);e[1]=1;var t=copy(e);expect(copy(e)instanceof Int16Array).toBeTruthy(),expect(t).toEqual(e),expect(t).not.toBe(e)}}),it("should copy a Int32Array with no destination",function(){if("undefined"!=typeof Int32Array){var e=new Int32Array(2);e[1]=1;var t=copy(e);expect(copy(e)instanceof Int32Array).toBeTruthy(),expect(t).toEqual(e),expect(t).not.toBe(e)}}),it("should copy a Float32Array with no destination",function(){if("undefined"!=typeof Float32Array){var e=new Float32Array(2);e[1]=1;var t=copy(e);expect(copy(e)instanceof Float32Array).toBeTruthy(),expect(t).toEqual(e),expect(t).not.toBe(e)}}),it("should copy a Float64Array with no destination",function(){if("undefined"!=typeof Float64Array){var e=new Float64Array(2);e[1]=1;var t=copy(e);expect(copy(e)instanceof Float64Array).toBeTruthy(),expect(t).toEqual(e),expect(t).not.toBe(e)}}),it("should throw an exception if a Uint8Array is the destination",function(){if("undefined"!=typeof Uint8Array){var e=new Uint8Array,t=new Uint8Array(5);expect(function(){copy(e,t)}).toThrowMinErr("ng","cpta","Can't copy! TypedArray destination cannot be mutated.")}}),it("should throw an exception if a Uint8ClampedArray is the destination",function(){if("undefined"!=typeof Uint8ClampedArray){var e=new Uint8ClampedArray,t=new Uint8ClampedArray(5);expect(function(){copy(e,t)}).toThrowMinErr("ng","cpta","Can't copy! TypedArray destination cannot be mutated.")}}),it("should throw an exception if a Uint16Array is the destination",function(){if("undefined"!=typeof Uint16Array){var e=new Uint16Array,t=new Uint16Array(5);expect(function(){copy(e,t)}).toThrowMinErr("ng","cpta","Can't copy! TypedArray destination cannot be mutated.")}}),it("should throw an exception if a Uint32Array is the destination",function(){if("undefined"!=typeof Uint32Array){var e=new Uint32Array,t=new Uint32Array(5);expect(function(){copy(e,t)}).toThrowMinErr("ng","cpta","Can't copy! TypedArray destination cannot be mutated.")}}),it("should throw an exception if a Int8Array is the destination",function(){if("undefined"!=typeof Int8Array){var e=new Int8Array,t=new Int8Array(5);expect(function(){copy(e,t)}).toThrowMinErr("ng","cpta","Can't copy! TypedArray destination cannot be mutated.")}}),it("should throw an exception if a Int16Array is the destination",function(){if("undefined"!=typeof Int16Array){var e=new Int16Array,t=new Int16Array(5);expect(function(){copy(e,t)}).toThrowMinErr("ng","cpta","Can't copy! TypedArray destination cannot be mutated.")}}),it("should throw an exception if a Int32Array is the destination",function(){if("undefined"!=typeof Int32Array){var e=new Int32Array,t=new Int32Array(5);expect(function(){copy(e,t)}).toThrowMinErr("ng","cpta","Can't copy! TypedArray destination cannot be mutated.")}}),it("should throw an exception if a Float32Array is the destination",function(){if("undefined"!=typeof Float32Array){var e=new Float32Array,t=new Float32Array(5);expect(function(){copy(e,t)}).toThrowMinErr("ng","cpta","Can't copy! TypedArray destination cannot be mutated.")}}),it("should throw an exception if a Float64Array is the destination",function(){if("undefined"!=typeof Float64Array){var e=new Float64Array,t=new Float64Array(5);expect(function(){copy(e,t)}).toThrowMinErr("ng","cpta","Can't copy! TypedArray destination cannot be mutated.")}}),it("should deeply copy an array into an existing array",function(){var e=[1,{name:"value"}],t=[{key:"v"}];expect(copy(e,t)).toBe(t),expect(t).toEqual([1,{name:"value"}]),expect(t[1]).toEqual({name:"value"}),expect(t[1]).not.toBe(e[1])}),it("should deeply copy an array into a new array",function(){var e=[1,{name:"value"}],t=copy(e);expect(e).toEqual([1,{name:"value"}]),expect(t).toEqual(e),expect(t).not.toBe(e),expect(t[1]).not.toBe(e[1])}),it("should copy empty array",function(){var e=[],t=[{key:"v"}];expect(copy(e,t)).toEqual([]),expect(t).toEqual([])}),it("should deeply copy an object into an existing object",function(){var e={a:{name:"value"}},t={b:{key:"v"}};expect(copy(e,t)).toBe(t),expect(t).toEqual({a:{name:"value"}}),expect(t.a).toEqual(e.a),expect(t.a).not.toBe(e.a)}),it("should deeply copy an object into a non-existing object",function(){var e={a:{name:"value"}},t=copy(e,void 0);expect(e).toEqual({a:{name:"value"}}),expect(t).toEqual(e),expect(t).not.toBe(e),expect(t.a).toEqual(e.a),expect(t.a).not.toBe(e.a)}),it("should copy primitives",function(){expect(copy(null)).toEqual(null),expect(copy("")).toBe(""),expect(copy("lala")).toBe("lala"),expect(copy(123)).toEqual(123),expect(copy([{key:null}])).toEqual([{key:null}])}),it("should throw an exception if a Scope is being copied",inject(function(e){expect(function(){copy(e.$new())}).toThrowMinErr("ng","cpws","Can't copy! Making copies of Window or Scope instances is not supported.")})),it("should throw an exception if a Window is being copied",function(){expect(function(){copy(window)}).toThrowMinErr("ng","cpws","Can't copy! Making copies of Window or Scope instances is not supported.")}),it("should throw an exception when source and destination are equivalent",function(){var e,t;e=t={key:"value"},expect(function(){copy(e,t)}).toThrowMinErr("ng","cpi","Can't copy! Source and destination are identical."),e=t=[2,4],expect(function(){copy(e,t)}).toThrowMinErr("ng","cpi","Can't copy! Source and destination are identical.")}),it("should not copy the private $$hashKey",function(){var e,t;e={},hashKey(e),t=copy(e),expect(hashKey(t)).not.toEqual(hashKey(e))}),it("should retain the previous $$hashKey when copying object with hashKey",function(){var e,t,o;e={},t={},o=hashKey(t),hashKey(e),t=copy(e,t),expect(hashKey(t)).not.toEqual(hashKey(e)),expect(hashKey(t)).toEqual(o)}),it("should retain the previous $$hashKey when copying non-object",function(){var e={},t=hashKey(e);copy(null,e),expect(hashKey(e)).toEqual(t),copy(42,e),expect(hashKey(e)).toEqual(t),copy(new Date,e),expect(hashKey(e)).toEqual(t)}),it("should handle circular references",function(){var e={b:{a:null},self:null,selfs:[null,null,[null]]};e.b.a=e,e.self=e,e.selfs=[e,e.b,[e]];var t=copy(e,null);expect(t).toEqual(e),expect(t).not.toBe(e),expect(t).toBe(t.self),expect(t).toBe(t.selfs[2][0]),expect(t.selfs[2]).not.toBe(e.selfs[2]);var o=[];t=copy(e,o),expect(t).toBe(o),expect(t).not.toBe(e),expect(t).toBe(t.self)}),it("should handle objects with multiple references",function(){var e={},t=[e,-1,e],o=copy(t);expect(o[0]).not.toBe(t[0]),expect(o[0]).toBe(o[2]);var n=[];o=copy(t,n),expect(o).toBe(n),expect(o[0]).not.toBe(t[0]),expect(o[0]).toBe(o[2])}),it("should handle date/regex objects with multiple references",function(){var e=/foo/,t=new Date,o={re:e,re2:e,d:t,d2:t},n=copy(o);expect(n.re).toBe(n.re2),expect(n.d).toBe(n.d2),n=copy(o,{}),expect(n.re).toBe(n.re2),expect(n.d).toBe(n.d2)}),it("should clear destination arrays correctly when source is non-array",function(){expect(copy(null,[1,2,3])).toEqual([]),expect(copy(void 0,[1,2,3])).toEqual([]),expect(copy({0:1,1:2},[1,2,3])).toEqual([1,2]),expect(copy(new Date,[1,2,3])).toEqual([]),expect(copy(/a/,[1,2,3])).toEqual([]),expect(copy(!0,[1,2,3])).toEqual([])}),it("should clear destination objects correctly when source is non-array",function(){expect(copy(null,{0:1,1:2,2:3})).toEqual({}),expect(copy(void 0,{0:1,1:2,2:3})).toEqual({}),expect(copy(new Date,{0:1,1:2,2:3})).toEqual({}),expect(copy(/a/,{0:1,1:2,2:3})).toEqual({}),expect(copy(!0,{0:1,1:2,2:3})).toEqual({})}),it("should copy objects with no prototype parent",function(){var e=extend(Object.create(null),{a:1,b:2,c:3}),t=copy(e);expect(Object.getPrototypeOf(t)).toBe(null),expect(t.a).toBe(1),expect(t.b).toBe(2),expect(t.c).toBe(3),expect(Object.keys(t)).toEqual(["a","b","c"])})}),describe("extend",function(){it("should not copy the private $$hashKey",function(){var e,t;e={},t={},hashKey(e),t=extend(t,e),expect(hashKey(t)).not.toEqual(hashKey(e))}),it("should retain the previous $$hashKey",function(){var e,t,o;e={},t={},o=hashKey(t),hashKey(e),t=extend(t,e),expect(hashKey(t)).not.toEqual(hashKey(e)),expect(hashKey(t)).toEqual(o)}),it("should work when extending with itself",function(){var e,t,o;t=e={},o=hashKey(t),t=extend(t,e),expect(hashKey(t)).toEqual(o)}),it("should copy dates by reference",function(){var e={date:new Date},t={};extend(t,e),expect(t.date).toBe(e.date)})}),describe("merge",function(){it("should recursively copy objects into dst from left to right",function(){var e={foo:{bar:"foobar"}},t={foo:{bazz:"foobazz"}},o={foo:{bozz:"foobozz"}};merge(e,t,o),expect(e).toEqual({foo:{bar:"foobar",bazz:"foobazz",bozz:"foobozz"}})}),it("should replace primitives with objects",function(){var e={foo:"bloop"},t={foo:{bar:{baz:"bloop"}}};merge(e,t),expect(e).toEqual({foo:{bar:{baz:"bloop"}}})}),it("should replace null values in destination with objects",function(){var e={foo:null},t={foo:{bar:{baz:"bloop"}}};merge(e,t),expect(e).toEqual({foo:{bar:{baz:"bloop"}}})}),it("should copy references to functions by value rather than merging",function(){function e(){}var t={foo:1},o={foo:e};merge(t,o),expect(t).toEqual({foo:e})}),it("should create a new array if destination property is a non-object and source property is an array",function(){var e={foo:NaN},t={foo:[1,2,3]};merge(e,t),expect(e).toEqual({foo:[1,2,3]}),expect(e.foo).not.toBe(t.foo)}),it("should copy dates by value",function(){var e={date:new Date},t={};merge(t,e),expect(t.date).not.toBe(e.date),expect(isDate(t.date)).toBeTruthy(),expect(t.date.valueOf()).toEqual(e.date.valueOf())})}),describe("shallow copy",function(){it("should make a copy",function(){var e={key:{}},t=shallowCopy(e);expect(t).toEqual(e),expect(t.key).toBe(e.key)}),it('should omit "$$"-prefixed properties',function(){var e={$$some:!0,$$:!0},t={};expect(shallowCopy(e,t)).toBe(t),expect(t.$$some).toBeUndefined(),expect(t.$$).toBeUndefined()}),it('should copy "$"-prefixed properties from copy',function(){var e={$some:!0},t={};expect(shallowCopy(e,t)).toBe(t),expect(t.$some).toBe(e.$some)}),it("should handle arrays",function(){var e=[{},1],t=[],o=shallowCopy(e);expect(o).not.toBe(e),expect(o).toEqual(e),expect(o[0]).toBe(e[0]),expect(shallowCopy(e,t)).toBe(t),expect(t).toEqual(e)}),it("should handle primitives",function(){expect(shallowCopy("test")).toBe("test"),expect(shallowCopy(3)).toBe(3),expect(shallowCopy(!0)).toBe(!0)})}),describe("elementHTML",function(){it("should dump element",function(){expect(startingTag('<div attr="123">something<span></span></div>')).toEqual('<div attr="123">')})}),describe("equals",function(){it("should return true if same object",function(){var e={};expect(equals(e,e)).toEqual(!0),expect(equals(e,{})).toEqual(!0),expect(equals(1,"1")).toEqual(!1),expect(equals(1,"2")).toEqual(!1)}),it("should recurse into object",function(){expect(equals({},{})).toEqual(!0),expect(equals({name:"misko"},{name:"misko"})).toEqual(!0),expect(equals({name:"misko",age:1},{name:"misko"})).toEqual(!1),expect(equals({name:"misko"},{name:"misko",age:1})).toEqual(!1),expect(equals({name:"misko"},{name:"adam"})).toEqual(!1),expect(equals(["misko"],["misko"])).toEqual(!0),expect(equals(["misko"],["adam"])).toEqual(!1),expect(equals(["misko"],["misko","adam"])).toEqual(!1)}),it("should ignore undefined member variables during comparison",function(){var e={name:"misko"},t={name:"misko",undefinedvar:void 0};expect(equals(e,t)).toBe(!0),expect(equals(t,e)).toBe(!0)}),it("should ignore $ member variables",function(){expect(equals({name:"misko",$id:1},{name:"misko",$id:2})).toEqual(!0),expect(equals({name:"misko"},{name:"misko",$id:2})).toEqual(!0),expect(equals({name:"misko",$id:1},{name:"misko"})).toEqual(!0)}),it("should ignore functions",function(){expect(equals({func:function(){}},{bar:function(){}})).toEqual(!0)}),it("should work well with nulls",function(){expect(equals(null,"123")).toBe(!1),expect(equals("123",null)).toBe(!1);var e={foo:"bar"};expect(equals(null,e)).toBe(!1),expect(equals(e,null)).toBe(!1),expect(equals(null,null)).toBe(!0)}),it("should work well with undefined",function(){expect(equals(void 0,"123")).toBe(!1),expect(equals("123",void 0)).toBe(!1);var e={foo:"bar"};expect(equals(void 0,e)).toBe(!1),expect(equals(e,void 0)).toBe(!1),expect(equals(void 0,void 0)).toBe(!0)}),it("should treat two NaNs as equal",function(){expect(equals(NaN,NaN)).toBe(!0)}),it("should compare Scope instances only by identity",inject(function(e){var t=e.$new(),o=e.$new();expect(equals(t,t)).toBe(!0),expect(equals(t,o)).toBe(!1),expect(equals(e,t)).toBe(!1),expect(equals(void 0,t)).toBe(!1)})),it("should compare Window instances only by identity",function(){expect(equals(window,window)).toBe(!0),expect(equals(window,window.parent)).toBe(!1),expect(equals(window,void 0)).toBe(!1)}),it("should compare dates",function(){expect(equals(new Date(0),new Date(0))).toBe(!0),expect(equals(new Date(0),new Date(1))).toBe(!1),expect(equals(new Date(0),0)).toBe(!1),expect(equals(0,new Date(0))).toBe(!1),expect(equals(new Date(void 0),new Date(void 0))).toBe(!0),expect(equals(new Date(void 0),new Date(0))).toBe(!1),expect(equals(new Date(void 0),new Date(null))).toBe(!1),expect(equals(new Date(void 0),new Date("wrong"))).toBe(!0),expect(equals(new Date,/abc/)).toBe(!1)}),it("should correctly test for keys that are present on Object.prototype",function(){expect(equals({},{hasOwnProperty:1})).toBe(!1),expect(equals({},{toString:null})).toBe(!1)}),it("should compare regular expressions",function(){expect(equals(/abc/,/abc/)).toBe(!0),expect(equals(/abc/i,new RegExp("abc","i"))).toBe(!0),expect(equals(new RegExp("abc","i"),new RegExp("abc","i"))).toBe(!0),expect(equals(new RegExp("abc","i"),new RegExp("abc"))).toBe(!1),expect(equals(/abc/i,/abc/)).toBe(!1),expect(equals(/abc/,/def/)).toBe(!1),expect(equals(/^abc/,/abc/)).toBe(!1),expect(equals(/^abc/,"/^abc/")).toBe(!1),expect(equals(/abc/,new Date)).toBe(!1)}),it("should return false when comparing an object and an array",function(){expect(equals({},[])).toBe(!1),expect(equals([],{})).toBe(!1)}),it("should return false when comparing an object and a RegExp",function(){expect(equals({},/abc/)).toBe(!1),expect(equals({},new RegExp("abc","i"))).toBe(!1)}),it("should return false when comparing an object and a Date",function(){expect(equals({},new Date)).toBe(!1)}),it("should safely compare objects with no prototype parent",function(){var e=extend(Object.create(null),{a:1,b:2,c:3}),t=extend(Object.create(null),{a:1,b:2,c:3});expect(equals(e,t)).toBe(!0),t.c=2,expect(equals(e,t)).toBe(!1)}),it("should safely compare objects which shadow Object.prototype.hasOwnProperty",function(){var e={hasOwnProperty:!0,a:1,b:2,c:3},t={hasOwnProperty:!0,a:1,b:2,c:3};expect(equals(e,t)).toBe(!0),e.hasOwnProperty=function(){},expect(equals(e,t)).toBe(!1)})}),describe("csp",function(){var e;beforeEach(function(){e=window.Function}),afterEach(function(){window.Function=e,delete csp.isActive_}),it("should return the false when CSP is not enabled (the default)",function(){expect(csp()).toBe(!1)}),it("should return true if CSP is autodetected via CSP v1.1 securityPolicy.isActive property",function(){window.Function=function(){throw new Error("CSP test")},expect(csp()).toBe(!0)}),it("should return the true when CSP is enabled manually via [ng-csp]",function(){spyOn(document,"querySelector").andCallFake(function(e){return"[ng-csp]"==e?{}:void 0}),expect(csp()).toBe(!0)}),it("should return the true when CSP is enabled manually via [data-ng-csp]",function(){spyOn(document,"querySelector").andCallFake(function(e){return"[data-ng-csp]"==e?{}:void 0}),expect(csp()).toBe(!0),expect(document.querySelector).toHaveBeenCalledWith("[data-ng-csp]")})}),describe("jq",function(){var e;beforeEach(function(){e=document.createElement("html")}),afterEach(function(){delete jq.name_}),it("should return undefined when jq is not set, no jQuery found (the default)",function(){expect(jq()).toBe(void 0)}),it("should return empty string when jq is enabled manually via [ng-jq] with empty string",function(){e.setAttribute("ng-jq",""),spyOn(document,"querySelector").andCallFake(function(t){return"[ng-jq]"===t?e:void 0}),expect(jq()).toBe("")}),it("should return empty string when jq is enabled manually via [data-ng-jq] with empty string",function(){e.setAttribute("data-ng-jq",""),spyOn(document,"querySelector").andCallFake(function(t){return"[data-ng-jq]"===t?e:void 0}),expect(jq()).toBe(""),expect(document.querySelector).toHaveBeenCalledWith("[data-ng-jq]")}),it("should return empty string when jq is enabled manually via [x-ng-jq] with empty string",function(){e.setAttribute("x-ng-jq",""),spyOn(document,"querySelector").andCallFake(function(t){return"[x-ng-jq]"===t?e:void 0}),expect(jq()).toBe(""),expect(document.querySelector).toHaveBeenCalledWith("[x-ng-jq]")}),it("should return empty string when jq is enabled manually via [ng:jq] with empty string",function(){e.setAttribute("ng:jq",""),spyOn(document,"querySelector").andCallFake(function(t){return"[ng\\:jq]"===t?e:void 0}),expect(jq()).toBe(""),expect(document.querySelector).toHaveBeenCalledWith("[ng\\:jq]")}),it('should return "jQuery" when jq is enabled manually via [ng-jq] with value "jQuery"',function(){e.setAttribute("ng-jq","jQuery"),spyOn(document,"querySelector").andCallFake(function(t){return"[ng-jq]"===t?e:void 0}),expect(jq()).toBe("jQuery"),expect(document.querySelector).toHaveBeenCalledWith("[ng-jq]")}),it('should return "jQuery" when jq is enabled manually via [data-ng-jq] with value "jQuery"',function(){e.setAttribute("data-ng-jq","jQuery"),spyOn(document,"querySelector").andCallFake(function(t){return"[data-ng-jq]"===t?e:void 0}),expect(jq()).toBe("jQuery"),expect(document.querySelector).toHaveBeenCalledWith("[data-ng-jq]")}),it('should return "jQuery" when jq is enabled manually via [x-ng-jq] with value "jQuery"',function(){e.setAttribute("x-ng-jq","jQuery"),spyOn(document,"querySelector").andCallFake(function(t){return"[x-ng-jq]"===t?e:void 0}),expect(jq()).toBe("jQuery"),expect(document.querySelector).toHaveBeenCalledWith("[x-ng-jq]")}),it('should return "jQuery" when jq is enabled manually via [ng:jq] with value "jQuery"',function(){e.setAttribute("ng:jq","jQuery"),spyOn(document,"querySelector").andCallFake(function(t){return"[ng\\:jq]"===t?e:void 0}),expect(jq()).toBe("jQuery"),expect(document.querySelector).toHaveBeenCalledWith("[ng\\:jq]")})}),describe("parseKeyValue",function(){it("should parse a string into key-value pairs",function(){expect(parseKeyValue("")).toEqual({}),expect(parseKeyValue("simple=pair")).toEqual({simple:"pair"}),expect(parseKeyValue("first=1&second=2")).toEqual({first:"1",second:"2"}),expect(parseKeyValue("escaped%20key=escaped%20value")).toEqual({"escaped key":"escaped value"}),expect(parseKeyValue("emptyKey=")).toEqual({emptyKey:""}),expect(parseKeyValue("flag1&key=value&flag2")).toEqual({flag1:!0,key:"value",flag2:!0})}),it("should ignore key values that are not valid URI components",function(){expect(function(){parseKeyValue("%")}).not.toThrow(),expect(parseKeyValue("%")).toEqual({}),expect(parseKeyValue("invalid=%")).toEqual({invalid:void 0}),expect(parseKeyValue("invalid=%&valid=good")).toEqual({invalid:void 0,valid:"good"})}),it("should parse a string into key-value pairs with duplicates grouped in an array",function(){expect(parseKeyValue("")).toEqual({}),expect(parseKeyValue("duplicate=pair")).toEqual({duplicate:"pair"}),expect(parseKeyValue("first=1&first=2")).toEqual({first:["1","2"]}),expect(parseKeyValue("escaped%20key=escaped%20value&&escaped%20key=escaped%20value2")).toEqual({"escaped key":["escaped value","escaped value2"]}),expect(parseKeyValue("flag1&key=value&flag1")).toEqual({flag1:[!0,!0],key:"value"}),expect(parseKeyValue("flag1&flag1=value&flag1=value2&flag1")).toEqual({flag1:[!0,"value","value2",!0]})}),it("should ignore properties higher in the prototype chain",function(){expect(parseKeyValue("toString=123")).toEqual({toString:"123"})})}),describe("toKeyValue",function(){it("should serialize key-value pairs into string",function(){expect(toKeyValue({})).toEqual(""),expect(toKeyValue({simple:"pair"})).toEqual("simple=pair"),expect(toKeyValue({first:"1",second:"2"})).toEqual("first=1&second=2"),expect(toKeyValue({"escaped key":"escaped value"})).toEqual("escaped%20key=escaped%20value"),expect(toKeyValue({emptyKey:""})).toEqual("emptyKey=")}),it("should serialize true values into flags",function(){expect(toKeyValue({flag1:!0,key:"value",flag2:!0})).toEqual("flag1&key=value&flag2")}),it("should serialize duplicates into duplicate param strings",function(){expect(toKeyValue({key:[323,"value",!0]})).toEqual("key=323&key=value&key"),expect(toKeyValue({key:[323,"value",!0,1234]})).toEqual("key=323&key=value&key&key=1234")})}),describe("forEach",function(){it("should iterate over *own* object properties",function(){function e(){this.bar="barVal",this.baz="bazVal"}e.prototype.foo="fooVal";var t=new e,o=[];forEach(t,function(e,t){o.push(t+":"+e)}),expect(o).toEqual(["bar:barVal","baz:bazVal"])}),it("should not break if obj is an array we override hasOwnProperty",function(){var e=[];e[0]=1,e[1]=2,e.hasOwnProperty=null;var t=[];forEach(e,function(e,o){t.push(o+":"+e)}),expect(t).toEqual(["0:1","1:2"])}),it("should handle JQLite and jQuery objects like arrays",function(){var e=jqLite("<p><span>s1</span><span>s2</span></p>").find("span"),t=[];forEach(e,function(e,o){t.push(o+":"+e.innerHTML)}),expect(t).toEqual(["0:s1","1:s2"])}),it("should handle NodeList objects like arrays",function(){var e=jqLite("<p><span>a</span><span>b</span><span>c</span></p>")[0].childNodes,t=[];forEach(e,function(e,o){t.push(o+":"+e.innerHTML)}),expect(t).toEqual(["0:a","1:b","2:c"])}),it("should handle HTMLCollection objects like arrays",function(){document.body.innerHTML="<p><a name='x'>a</a><a name='y'>b</a><a name='x'>c</a></p>";var e=document.getElementsByName("x"),t=[];forEach(e,function(e,o){t.push(o+":"+e.innerHTML)}),expect(t).toEqual(["0:a","1:c"])}),document.querySelectorAll&&it("should handle the result of querySelectorAll in IE8 as it has no hasOwnProperty function",function(){document.body.innerHTML="<p><a name='x'>a</a><a name='y'>b</a><a name='x'>c</a></p>";var e=document.querySelectorAll('[name="x"]'),t=[];forEach(e,function(e,o){t.push(o+":"+e.innerHTML)}),expect(t).toEqual(["0:a","1:c"])}),it("should handle arguments objects like arrays",function(){var e,t=[];!function(){e=arguments}("a","b","c"),forEach(e,function(e,o){t.push(o+":"+e)}),expect(t).toEqual(["0:a","1:b","2:c"])}),it("should handle string values like arrays",function(){var e=[];forEach("bar",function(t,o){e.push(o+":"+t)}),expect(e).toEqual(["0:b","1:a","2:r"])}),it("should handle objects with length property as objects",function(){var e={foo:"bar",length:2},t=[];forEach(e,function(e,o){t.push(o+":"+e)}),expect(t).toEqual(["foo:bar","length:2"])}),it("should handle objects of custom types with length property as objects",function(){function e(){this.length=2,this.foo="bar"}var t=new e,o=[];forEach(t,function(e,t){o.push(t+":"+e)}),expect(o).toEqual(["length:2","foo:bar"])}),it("should not invoke the iterator for indexed properties which are not present in the collection",function(){var e=[],t=[];t[5]="SPARSE",forEach(t,function(t,o){e.push(t+o)}),expect(e.length).toBe(1),expect(e[0]).toBe("SPARSE5")}),it("should safely iterate through objects with no prototype parent",function(){var e=extend(Object.create(null),{a:1,b:2,c:3}),t=[],o={};forEach(e,function(n,a,i){expect(this).toBe(o),expect(i).toBe(e),t.push(a+"="+n)},o),expect(t.length).toBe(3),expect(t).toEqual(["a=1","b=2","c=3"])}),it("should safely iterate through objects which shadow Object.prototype.hasOwnProperty",function(){var e={hasOwnProperty:!0,a:1,b:2,c:3},t=[],o={};forEach(e,function(n,a,i){expect(this).toBe(o),expect(i).toBe(e),t.push(a+"="+n)},o),expect(t.length).toBe(4),expect(t).toEqual(["hasOwnProperty=true","a=1","b=2","c=3"])}),describe("ES spec api compliance",function(){function e(e,t){var o={};forEach(t,function(n,a,i){expect(i).toBe(t),expect(i[a]).toBe(n),expect(this).toBe(o),e--},o),expect(e).toBe(0)}it("should follow the ES spec when called with array",function(){e(2,[1,2])}),it("should follow the ES spec when called with arguments",function(){e(2,function(){return arguments}(1,2))}),it("should follow the ES spec when called with string",function(){e(2,"12")}),it("should follow the ES spec when called with jQuery/jqLite",function(){e(2,jqLite("<span>a</span><span>b</span>"))}),it("should follow the ES spec when called with childNodes NodeList",function(){e(2,jqLite("<p><span>a</span><span>b</span></p>")[0].childNodes)}),it("should follow the ES spec when called with getElementsByTagName HTMLCollection",function(){e(2,jqLite("<p><span>a</span><span>b</span></p>")[0].getElementsByTagName("*"))}),it("should follow the ES spec when called with querySelectorAll HTMLCollection",function(){e(2,jqLite("<p><span>a</span><span>b</span></p>")[0].querySelectorAll("*"))}),it("should follow the ES spec when called with JSON",function(){e(2,{a:1,b:2})}),it("should follow the ES spec when called with function",function(){function t(){}t.a=1,t.b=2,e(2,t)})})}),describe("encodeUriSegment",function(){it("should correctly encode uri segment and not encode chars defined as pchar set in rfc3986",function(){expect(encodeUriSegment("asdf1234asdf")).toEqual("asdf1234asdf"),expect(encodeUriSegment("-_.!~*'(); -_.!~*'();")).toEqual("-_.!~*'();%20-_.!~*'();"),expect(encodeUriSegment(":@&=+$, :@&=+$,")).toEqual(":@&=+$,%20:@&=+$,"),expect(encodeUriSegment("/; /;")).toEqual("%2F;%20%2F;")})}),describe("encodeUriQuery",function(){it("should correctly encode uri query and not encode chars defined as pchar set in rfc3986",function(){expect(encodeUriQuery("asdf1234asdf")).toEqual("asdf1234asdf"),expect(encodeUriQuery("-_.!~*'() -_.!~*'()")).toEqual("-_.!~*'()+-_.!~*'()"),expect(encodeUriQuery(":@$, :@$,")).toEqual(":@$,+:@$,"),expect(encodeUriQuery("&;=+# &;=+#")).toEqual("%26;%3D%2B%23+%26;%3D%2B%23"),expect(encodeUriQuery("  ")).toEqual("++"),expect(encodeUriQuery("  ",!0)).toEqual("%20%20"),expect(encodeUriQuery("null",!0)).toEqual("null"),expect(encodeUriQuery("null")).toEqual("null")})}),describe("angularInit",function(){var e,t;beforeEach(function(){t={hasAttribute:function(e){return!!t[e]},querySelector:function(e){return t.querySelector[e]||null},getAttribute:function(e){return t[e]}},e=jasmine.createSpy("bootstrapSpy")}),it("should do nothing when not found",function(){angularInit(t,e),expect(e).not.toHaveBeenCalled()}),it("should look for ngApp directive as attr",function(){var o=jqLite('<div ng-app="ABC"></div>')[0];t.querySelector["[ng-app]"]=o,angularInit(t,e),expect(e).toHaveBeenCalledOnceWith(o,["ABC"],jasmine.any(Object))}),it("should look for ngApp directive using querySelectorAll",function(){var o=jqLite('<div x-ng-app="ABC"></div>')[0];t.querySelector["[x-ng-app]"]=o,angularInit(t,e),expect(e).toHaveBeenCalledOnceWith(o,["ABC"],jasmine.any(Object))}),it("should bootstrap anonymously",function(){var o=jqLite("<div x-ng-app></div>")[0];t.querySelector["[x-ng-app]"]=o,angularInit(t,e),expect(e).toHaveBeenCalledOnceWith(o,[],jasmine.any(Object))}),it("should bootstrap if the annotation is on the root element",function(){var t=jqLite('<div ng-app=""></div>')[0];angularInit(t,e),expect(e).toHaveBeenCalledOnceWith(t,[],jasmine.any(Object))}),it("should complain if app module cannot be found",function(){var e=jqLite('<div ng-app="doesntexist"></div>')[0];expect(function(){angularInit(e,angular.bootstrap)}).toThrowMatching(new RegExp("\\[\\$injector:modulerr] Failed to instantiate module doesntexist due to:\\n.*\\[\\$injector:nomod] Module 'doesntexist' is not available! You either misspelled the module name or forgot to load it\\."))}),it("should complain if an element has already been bootstrapped",function(){var e=jqLite("<div>bootstrap me!</div>");angular.bootstrap(e),expect(function(){angular.bootstrap(e)}).toThrowMatching(/\[ng:btstrpd\] App Already Bootstrapped with this Element '&lt;div class="?ng\-scope"?( ng[0-9]+="?[0-9]+"?)?&gt;'/i),dealoc(e)}),it("should complain if manually bootstrapping a document whose <html> element has already been bootstrapped",function(){angular.bootstrap(document.getElementsByTagName("html")[0]),expect(function(){angular.bootstrap(document)}).toThrowMatching(/\[ng:btstrpd\] App Already Bootstrapped with this Element 'document'/i),dealoc(document)}),it("should bootstrap in strict mode when ng-strict-di attribute is specified",function(){function t(e){}e=spyOn(angular,"bootstrap").andCallThrough();var o=jqLite('<div ng-app="" ng-strict-di></div>');angularInit(jqLite("<div></div>").append(o[0])[0],e),expect(e).toHaveBeenCalledOnce(),expect(e.mostRecentCall.args[2].strictDi).toBe(!0);var n=o.injector();expect(function(){n.instantiate(t)}).toThrowMinErr("$injector","strictdi"),dealoc(o)})}),describe("angular service",function(){it("should override services",function(){
module(function(e){e.value("fake","old"),e.value("fake","new")}),inject(function(e){expect(e).toEqual("new")})}),it("should inject dependencies specified by $inject and ignore function argument name",function(){expect(angular.injector([function(e){e.factory("svc1",function(){return"svc1"}),e.factory("svc2",["svc1",function(e){return"svc2-"+e}])}]).get("svc2")).toEqual("svc2-svc1")})}),describe("isDate",function(){it("should return true for Date object",function(){expect(isDate(new Date)).toBe(!0)}),it("should return false for non Date objects",function(){expect(isDate([])).toBe(!1),expect(isDate("")).toBe(!1),expect(isDate(23)).toBe(!1),expect(isDate({})).toBe(!1)})}),describe("isRegExp",function(){it("should return true for RegExp object",function(){expect(isRegExp(/^foobar$/)).toBe(!0),expect(isRegExp(new RegExp("^foobar$/"))).toBe(!0)}),it("should return false for non RegExp objects",function(){expect(isRegExp([])).toBe(!1),expect(isRegExp("")).toBe(!1),expect(isRegExp(23)).toBe(!1),expect(isRegExp({})).toBe(!1),expect(isRegExp(new Date)).toBe(!1)})}),describe("isWindow",function(){it("should return true for the Window object",function(){expect(isWindow(window)).toBe(!0)}),it("should return false for any object that is not a Window",function(){expect(isWindow([])).toBe(!1),expect(isWindow("")).toBeFalsy(),expect(isWindow(23)).toBe(!1),expect(isWindow({})).toBe(!1),expect(isWindow(new Date)).toBe(!1),expect(isWindow(document)).toBe(!1)})}),describe("compile",function(){it("should link to existing node and create scope",inject(function(t,o){var n=angular.element('<div>{{greeting = "hello world"}}</div>');e=o(n)(t),t.$digest(),expect(n.text()).toEqual("hello world"),expect(t.greeting).toEqual("hello world")})),it("should link to existing node and given scope",inject(function(t,o){var n=angular.element('<div>{{greeting = "hello world"}}</div>');e=o(n)(t),t.$digest(),expect(n.text()).toEqual("hello world")})),it("should link to new node and given scope",inject(function(t,o){var n=jqLite('<div>{{greeting = "hello world"}}</div>'),a=o(n),i=n.clone();e=a(t,function(e){i=e}),t.$digest(),expect(n.text()).toEqual('{{greeting = "hello world"}}'),expect(e.text()).toEqual("hello world"),expect(e).toEqual(i),expect(t.greeting).toEqual("hello world")})),it("should link to cloned node and create scope",inject(function(t,o){var n=jqLite('<div>{{greeting = "hello world"}}</div>');e=o(n)(t,noop),t.$digest(),expect(n.text()).toEqual('{{greeting = "hello world"}}'),expect(e.text()).toEqual("hello world"),expect(t.greeting).toEqual("hello world")}))}),describe("nodeName_",function(){it('should correctly detect node name with "namespace" when xmlns is defined',function(){var e=jqLite('<div xmlns:ngtest="http://angularjs.org/"><ngtest:foo ngtest:attr="bar"></ngtest:foo></div>')[0];expect(nodeName_(e.childNodes[0])).toBe("ngtest:foo"),expect(e.childNodes[0].getAttribute("ngtest:attr")).toBe("bar")}),it('should correctly detect node name with "namespace" when xmlns is NOT defined',function(){var e=jqLite('<div xmlns:ngtest="http://angularjs.org/"><ngtest:foo ngtest:attr="bar"></ng-test></div>')[0];expect(nodeName_(e.childNodes[0])).toBe("ngtest:foo"),expect(e.childNodes[0].getAttribute("ngtest:attr")).toBe("bar")}),it("should return undefined for elements without the .nodeName property",function(){expect(nodeName_({})).toBeUndefined()})}),describe("nextUid()",function(){it("should return new id per call",function(){for(var e={},t=100;t--;){var o=nextUid();expect(typeof o).toBe("number"),expect(e[o]).toBeFalsy(),e[o]=!0}})}),describe("version",function(){it("version should have full/major/minor/dot/codeName properties",function(){expect(version).toBeDefined(),expect(version.full).toBe('"NG_VERSION_FULL"'),expect(version.major).toBe("NG_VERSION_MAJOR"),expect(version.minor).toBe("NG_VERSION_MINOR"),expect(version.dot).toBe("NG_VERSION_DOT"),expect(version.codeName).toBe('"NG_VERSION_CODENAME"')})}),describe("bootstrap",function(){it("should bootstrap app",function(){var e=jqLite("<div>{{1+2}}</div>"),t=angular.bootstrap(e);expect(t).toBeDefined(),expect(e.injector()).toBe(t),dealoc(e)}),it("should complain if app module can't be found",function(){var e=jqLite("<div>{{1+2}}</div>");expect(function(){angular.bootstrap(e,["doesntexist"])}).toThrowMatching(new RegExp("\\[\\$injector:modulerr\\] Failed to instantiate module doesntexist due to:\\n.*\\[\\$injector:nomod\\] Module 'doesntexist' is not available! You either misspelled the module name or forgot to load it\\.")),expect(e.html()).toBe("{{1+2}}"),dealoc(e)}),describe("deferred bootstrap",function(){var e,t=window.name;beforeEach(function(){window.name="",e=jqLite("<div>{{1+2}}</div>")}),afterEach(function(){dealoc(e),window.name=t}),it("should provide injector for deferred bootstrap",function(){var t;window.name="NG_DEFER_BOOTSTRAP!",t=angular.bootstrap(e),expect(t).toBeUndefined(),t=angular.resumeBootstrap(),expect(t).toBeDefined()}),it("should resume deferred bootstrap, if defined",function(){var t;window.name="NG_DEFER_BOOTSTRAP!",angular.resumeDeferredBootstrap=noop;var o=spyOn(angular,"resumeDeferredBootstrap");t=angular.bootstrap(e),expect(o).toHaveBeenCalled()}),it("should wait for extra modules",function(){window.name="NG_DEFER_BOOTSTRAP!",angular.bootstrap(e),expect(e.html()).toBe("{{1+2}}"),angular.resumeBootstrap(),expect(e.html()).toBe("3"),expect(window.name).toEqual("")}),it("should load extra modules",function(){e=jqLite("<div>{{1+2}}</div>"),window.name="NG_DEFER_BOOTSTRAP!";var t=jasmine.createSpy("bootstrapping");angular.bootstrap(e,[t]),expect(t).not.toHaveBeenCalled(),expect(e.injector()).toBeUndefined(),angular.module("addedModule",[]).value("foo","bar"),angular.resumeBootstrap(["addedModule"]),expect(t).toHaveBeenCalledOnce(),expect(e.injector().get("foo")).toEqual("bar")}),it("should not defer bootstrap without window.name cue",function(){angular.bootstrap(e,[]),angular.module("addedModule",[]).value("foo","bar"),expect(function(){e.injector().get("foo")}).toThrowMinErr("$injector","unpr","Unknown provider: fooProvider <- foo"),expect(e.injector().get("$http")).toBeDefined()}),it("should restore the original window.name after bootstrap",function(){window.name="NG_DEFER_BOOTSTRAP!my custom name",angular.bootstrap(e),expect(e.html()).toBe("{{1+2}}"),angular.resumeBootstrap(),expect(e.html()).toBe("3"),expect(window.name).toEqual("my custom name")})})}),describe("startingElementHtml",function(){it("should show starting element tag only",function(){expect(startingTag('<ng-abc x="2A"><div>text</div></ng-abc>')).toBe('<ng-abc x="2A">')})}),describe("startingTag",function(){it("should allow passing in Nodes instead of Elements",function(){var e=document.createTextNode("some text");expect(startingTag(e)).toBe("some text")})}),describe("snake_case",function(){it("should convert to snake_case",function(){expect(snake_case("ABC")).toEqual("a_b_c"),expect(snake_case("alanBobCharles")).toEqual("alan_bob_charles")}),it("should allow separator to be overridden",function(){expect(snake_case("ABC","&")).toEqual("a&b&c"),expect(snake_case("alanBobCharles","&")).toEqual("alan&bob&charles")})}),describe("fromJson",function(){it("should delegate to JSON.parse",function(){var e=spyOn(JSON,"parse").andCallThrough();expect(fromJson("{}")).toEqual({}),expect(e).toHaveBeenCalled()})}),describe("toJson",function(){it("should delegate to JSON.stringify",function(){var e=spyOn(JSON,"stringify").andCallThrough();expect(toJson({})).toEqual("{}"),expect(e).toHaveBeenCalled()}),it("should format objects pretty",function(){expect(toJson({a:1,b:2},!0)).toBe('{\n  "a": 1,\n  "b": 2\n}'),expect(toJson({a:{b:2}},!0)).toBe('{\n  "a": {\n    "b": 2\n  }\n}'),expect(toJson({a:1,b:2},!1)).toBe('{"a":1,"b":2}'),expect(toJson({a:1,b:2},0)).toBe('{"a":1,"b":2}'),expect(toJson({a:1,b:2},1)).toBe('{\n "a": 1,\n "b": 2\n}'),expect(toJson({a:1,b:2},{})).toBe('{\n  "a": 1,\n  "b": 2\n}')}),it("should not serialize properties starting with $$",function(){expect(toJson({$$some:"value"},!1)).toEqual("{}")}),it("should serialize properties starting with $",function(){expect(toJson({$few:"v"},!1)).toEqual('{"$few":"v"}')}),it("should not serialize $window object",function(){expect(toJson(window)).toEqual('"$WINDOW"')}),it("should not serialize $document object",function(){expect(toJson(document)).toEqual('"$DOCUMENT"')}),it("should not serialize scope instances",inject(function(e){expect(toJson({key:e})).toEqual('{"key":"$SCOPE"}')})),it("should serialize undefined as undefined",function(){expect(toJson(void 0)).toEqual(void 0)})}),describe("isElement",function(){it("should return a boolean value",inject(function(e,t,o){var n=e("<p>Hello, world!</p>")(o),a=t.find("body")[0],i=[!1,!1,!1,!1,!1,!1,!1,!0,!0],c=[null,void 0,"string",1001,{},0,!1,a,n];angular.forEach(c,function(e,t){var o=angular.isElement(e);expect(typeof o).toEqual("boolean"),expect(o).toEqual(i[t])})})),it("should return false for objects resembling a Backbone Collection",function(){var e={children:[{},{},{}],find:function(){},on:function(){},off:function(){},bind:function(){}};expect(isElement(e)).toBe(!1)}),it("should return false for arrays with node-like properties",function(){var e=[1,2,3];e.on=!0,expect(isElement(e)).toBe(!1)})})});
//# sourceMappingURL=test3.map